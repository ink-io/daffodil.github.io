Supervisor

    supervisord Command-Line Options
        -c File, --configure=File
        -n --nodaemin, 将supervisor运行在前台
        -h
        -u USER, --user=USER 以什么用户的身份启动supervisor
        -m OCTAL, --umask=OCTAL, 表示管理员启动后应使用的umask, 默认为022
        -d PATH, --directory=PATH, 
        -l FILE, --logfile=FILE, 日志文件位置
        -y BYTES, --logfile_maxbytes 日志文件最大的大小，超过则滚动
        -e LEVEL, --loglevel=LEVEL [trace, debug, info, warn, error, and critical]
        -j FILE --pidfile=FILE
        -q PATH --childlogdir=PATH 主管将在其中写入其AUTO模式子进程日志的目录路径 (该目录必须已经存在).
        -k, --nocleanup 防止supervisord在启动时执行清理（删除旧的AUTO进程日志文件）
        -a NUM 成功启动之前，受监管进程必须可使用的最小文件描述符数目。
        -v --version

    supervisorctl
        -s, supervisord使用http启动时 需要的选项--serverurl URL (default: http://localhost:9001)
        -u username
        -p pasword
    
        shell界面的 Actions
            help
            add
                激活配置文件中的更新内容
            remove
                Removes Proccess/group From active config.
            update

            update all
            update <groups name>
            
            clear <name> <name>...
                clear process logs

            clear all

            fg
                Connect to a process in foreground mode Press Ctrl+C to exit foreground
            pid 
                get the pid of supervisord
            pid <name>
                get the PID of the child process by name.
            pid all

            reload
                重启远程的supervisord
            reread
                reload the daemon configureation files, without add/remove
            restart <name> <name> ..

            restart all
                restart all preocesses : restart does not reread config file

            signal:
                SIGTERM
                SIGINT
                SIGQUIT
                SIGHUP
                SIGUSR2
            start <name> <name>

            status

            stop


    Supervisord.conf

    [unix_http_server] supervisorctl接入supervisord的方法
        this section is allow supervisorctl communicate with supervisord use socket file

        file:
            file=/var/run/supervisor/supervisor.sock
        
        chmod:
            change the unix Permission mode bits of the UNIX domain socket file
            chmod=0700
        chown:
            chown=root:root
            启动supervisord时的用户和组
        username:
            认证 authenication to this server
            username=NAME
        password:
            authenication password
            可以使用SHA加密password
                password={SHA}82ab876d1387bfafe46cc1c8a2ef074eae50cb1d
            加密的算法使用的是SHA1
            我们可以自己生成:
                echo -n password | sha1sum | awk '{print $1}'
        
        example:
            [unix_http_server]
            file = /tmp/supervisor.sock
            chmod = 0777
            chown= nobody:nogroup
            username = user
            password = 123

    [inet_http_server]

        实现http api的服务
        port:
            :port | *:port
        username:
        password:

        example:
            port=127.0.0.1:8080
            username=
            password=
    
    [supervisord] Section Settings
        globle settings related to supervisord process

        logfile:
            path to active log of Supervisord process
            if use special file like /dev/stdout that is not seekable,
            log file rotation must be disabled by setting logfile_maxbytes=0

        logfile_maxbytes:
            maximum number of bytes that may be cunsumed by acitvity log file before it rotated
            suffix can use KB, GB, MB can be used as a value.

            value 0 to indicate an unlimited log size.
            default:50MB
        
        logfile_backups:
            活日志轮转要保留的备份数目，0表示 NO backup
            default: 10

        loglevel:
            error, warn, info, debug, trace, blather
            default: info
        
        pidfile:

        umask:
            the umask of the supervisord process

        nodaemon:
            前台运行 foreground 
            default: false

        minfds:
            成功启动supervisord之前，最小可用的文件句柄数数目

        minprocs:
            The minimum number of process descriptors that must be available before 
            supervisord will start successfully.
        
        nocleanup:
            防止管理员在启动时清除任何现有的AUTO子日志文件。

        childlogdir:
            The directory used for AUTO child log files. 

        user:
            Instruct supervisord to switch users to this UNIX user account before doing any meaningful processing. T
            he user can only be switched if supervisord is started as the root user.
        
        directory:
            cd to this specify directory after daemonizes

        strip_ansi:
            从子日志文件中删除所有ANSI转义序列.
            default: false 

        environment:
            A list of key/value pairs in the form KEY="val",KEY2="val2" that will be placed in the 
            supervisord process’ environment

        identifier:
            RPC接口使用的此supervisord进程的标识符字符串
            default: supervisor
        

    example:
        [supervisord]
        logfile=/tmp/supervisord.log
        logfile_maxbytes = 50MB
        logfile_backups = 10|0
        loglevel = debug
        pidfile = /var/run/supervisor/supervisord.pid
        nodaemon = false
        minfds = 1024
        minprocs = 200
        umask = 022
        user = zhangyexin
        identifier = supervisor
        directory = /tmp
        nocleanup = false | true
        childlogdir = /var/log/supervisord
        strip_ansi = false
        environment = name="zyxasr",age="10",...

    [supervisorctl]

        serverurl
            to connect to the Supervisord
            serverurl = http://localhost:9001 (default)
            serverurl = unix:///absolute/path/to/socketfile
        
        username
        password
        
        prompt:
            string used as supervisorctl prompt
            default: supervisor
        
        history_file: 记录命令历史的垃圾玩意儿.
            A path to use as the readline persistent history file.
            your supervisorctl commands will be kept in the file

    example:
        [supervisorctl]
        serverurl = unix:///tmp/supervisor.sock
        username = chris
        password = 123
        prompt = mysupervisor

    
    [program:progress_name]
        progress_name is must,is must not include colon character or bracket character
    
        command:
            absolute path for command, it can append arguments
            like: 
                command=/root/echo -p %(process_num)02d
                %(process_num)02d 可以理解为python的变量，他必须应用于process_num>1的场景
                python的环境变量可以混合使用， 它的编号从00开始使用
               
                process_name = %(program_name)s_%(process_num)02d, 
                他会生成 [program:process_name] 里面的progress_name_00...
                
                [program:echo_go]
                command = /root/echo -p 9090%(process_num)02d
                process_name = %(program_name)s_%(process_num)02d
                numprocs=3
                supervisorctl 中生成如下的 process
                echo_go:echo_go_00   RUNNING   pid 10621, uptime 0:08:08
                echo_go:echo_go_01   RUNNING   pid 10620, uptime 0:08:08
                echo_go:echo_go_02   RUNNING   pid 10625, uptime 0:08:08

                [zhangyexin@master ~]$ ps aux | grep echo
                root   10620  0.0  0.0 102808  1312 ? Sl   13:51   0:00 /root/echo -p 909001
                root   10621  0.0  0.0 102808  1312 ? Sl   13:51   0:00 /root/echo -p 909000
                root   10625  0.0  0.0 102808  1372 ? Sl   13:51   0:00 /root/echo -p 909002
        
        process_name:
            default: %(program_name)s
        
        numprocs:
            when numprocs > 1, process_name expression must include %s(process_num)s
            其实就是在名称后面加上编号
       
        numprocs_start:
            An integer offset that is used to compute the number at which numprocs starts.
            这个指定了%s(process_num)s 的起始编号

        priority:
            程序启动以及关闭的相关优先级顺序
            较低的优先级表示优先启动，最后关闭
            when supervisorctl use start all | stop all | update all 等等时，比较有用
            default: 999

        autostart:
            if true, this program will start automatically when supervisord is started
            default: true
        
        startsecs:
            The total number os seconds which program needs to stay running after startup to consider
            the start successfully.
            after these seconds ,supervisorctl will set progress status STARTING to RUNNING.
            default: 1
        
        startretries:
            失败重启次数
            default: 3

        autorestart:
            当处于RUNNING状态的program退出时，supervisord 的重启策略.
            1. false:
                not autorestart
            2. unexpected:
                当程序退出时,exit code 不是配置文件中定义的退出码之一的，则进行重启
            3. true:
                the process will be unconditionally(无条件的) restarted when it exits,
                without regard to its exit code.
            default: unexpected

        exitcodes:
            退出码， 不在列表中并且autorestart为unexcepted，也不是supervisord主动停止 
            将会重启进程
        
        stopsignal:
            TERM, HUP, INT, QUIT, KILL, USR1, or USR2.
            default: TERM

        stopwaitsecs:
            等待多少秒还未停止，使用SIGKILL杀死进程.
            default: 10
        
        stopasgroup:

        killasgroup:

        user:
            使用那个user跑这个进程， The user can only be switched if supervisord is run as
            the root user,If supervisord can't switch to the specify user, the process will not 
            to be started
            This does not start a login shell and does not change environment variables like USER or HOME

        redirect_stderr:
            错误重定向
            if true, redirect proc stderr to stdout
        
        stdout_logfile:
            Put process stdout in this file, if unset or set AUTO, supervisor will automatically
            choose a file location. AUTO file and their backups will be deleted when supervisord restart
            If stdout_logfile is set to a special file like /dev/stdout that is not seekable, 
            log rotation must be disabled by setting stdout_logfile_maxbytes = 0.
            default: AUTO
        
        stdout_logfile_maxbytes
            The maximum number of bytes that may be consumed by stdout_logfile before it is rotated
            default: 50MB
        
        stdout_logfile_backups
            default:10

        stderr_logfile:
        stderr_logfile_maxbytes:
        stderr_logfile_backups:

        stdout_syslog:
            send stdout to syslog with process name
            default: false

        stderr_syslog:
            default: false

        environment:
            environment=A="1",B="2"

        directory:
            supervisord 启动子进程之后应将目录更改为指定目录

        umask:
            002,022...
            default: inherit(继承) supervisor's

        serverurl:
           default: AUTO 
    
    example:
        [program: echo_go]
        command = /bin/echo_go -p 9090
        process_name = %(process_name)s_%s(process_num)s
        numprocs = 10
        directory = /tmp
        umask=022
        priority=999
        autostart=true
        autorestart=unexpected
        startsecs=10
        startretries=3
        exitcodes=0
        stopsignal=TERM
        stopwaitsecs=10
        stopasgroup=false
        killasgroup=false
        user=chrism
        redirect_stderr=false
        stdout_logfile=/a/path
        stdout_logfile_maxbytes=1MB
        stdout_logfile_backups=10
        stdout_capture_maxbytes=1MB
        stdout_events_enabled=false
        stderr_logfile=/a/path
        stderr_logfile_maxbytes=1MB
        stderr_logfile_backups=10
        stderr_capture_maxbytes=1MB
        stderr_events_enabled=false
        environment=A="1",B="2"
        serverurl=AUTO

    [include]
        if have a section named include, it must contain a single key named files.
        the value in this key specify other config files to be included within the configureation

        The [include] sections  is processed by supervisord only.

        [include]
        files = /an/absolute/filename.conf /an/absolute/*.conf foo.conf config??.conf

    [group:x]
    