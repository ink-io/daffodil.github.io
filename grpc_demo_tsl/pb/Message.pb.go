// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pb/Message.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type TestReQ struct {
	Label                string   `protobuf:"bytes,1,opt,name=label,proto3" json:"label,omitempty"`
	Type                 int32    `protobuf:"varint,2,opt,name=Type,proto3" json:"Type,omitempty"`
	Reps                 int64    `protobuf:"varint,3,opt,name=reps,proto3" json:"reps,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TestReQ) Reset()         { *m = TestReQ{} }
func (m *TestReQ) String() string { return proto.CompactTextString(m) }
func (*TestReQ) ProtoMessage()    {}
func (*TestReQ) Descriptor() ([]byte, []int) {
	return fileDescriptor_bc172b979e1ec370, []int{0}
}

func (m *TestReQ) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestReQ.Unmarshal(m, b)
}
func (m *TestReQ) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestReQ.Marshal(b, m, deterministic)
}
func (m *TestReQ) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestReQ.Merge(m, src)
}
func (m *TestReQ) XXX_Size() int {
	return xxx_messageInfo_TestReQ.Size(m)
}
func (m *TestReQ) XXX_DiscardUnknown() {
	xxx_messageInfo_TestReQ.DiscardUnknown(m)
}

var xxx_messageInfo_TestReQ proto.InternalMessageInfo

func (m *TestReQ) GetLabel() string {
	if m != nil {
		return m.Label
	}
	return ""
}

func (m *TestReQ) GetType() int32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *TestReQ) GetReps() int64 {
	if m != nil {
		return m.Reps
	}
	return 0
}

type ResponsE struct {
	Msg                  string   `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
	Status               string   `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResponsE) Reset()         { *m = ResponsE{} }
func (m *ResponsE) String() string { return proto.CompactTextString(m) }
func (*ResponsE) ProtoMessage()    {}
func (*ResponsE) Descriptor() ([]byte, []int) {
	return fileDescriptor_bc172b979e1ec370, []int{1}
}

func (m *ResponsE) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResponsE.Unmarshal(m, b)
}
func (m *ResponsE) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResponsE.Marshal(b, m, deterministic)
}
func (m *ResponsE) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResponsE.Merge(m, src)
}
func (m *ResponsE) XXX_Size() int {
	return xxx_messageInfo_ResponsE.Size(m)
}
func (m *ResponsE) XXX_DiscardUnknown() {
	xxx_messageInfo_ResponsE.DiscardUnknown(m)
}

var xxx_messageInfo_ResponsE proto.InternalMessageInfo

func (m *ResponsE) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *ResponsE) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func init() {
	proto.RegisterType((*TestReQ)(nil), "pb.TestReQ")
	proto.RegisterType((*ResponsE)(nil), "pb.ResponsE")
}

func init() { proto.RegisterFile("pb/Message.proto", fileDescriptor_bc172b979e1ec370) }

var fileDescriptor_bc172b979e1ec370 = []byte{
	// 182 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x34, 0x8e, 0xb1, 0x8e, 0x82, 0x40,
	0x10, 0x86, 0xb3, 0x70, 0x70, 0xc7, 0x70, 0x05, 0x99, 0x5c, 0x2e, 0xc4, 0x8a, 0x10, 0x0b, 0x2a,
	0x34, 0xe2, 0x2b, 0x18, 0x2b, 0x0a, 0x57, 0x5e, 0x80, 0x8d, 0x13, 0x1a, 0x84, 0x09, 0xb3, 0x16,
	0xbe, 0xbd, 0xd9, 0x15, 0xbb, 0xff, 0xfb, 0x8b, 0x2f, 0x1f, 0x64, 0x6c, 0x76, 0x2d, 0x89, 0xf4,
	0x03, 0xd5, 0xbc, 0xcc, 0x76, 0xc6, 0x80, 0x4d, 0x79, 0x86, 0xef, 0x8e, 0xc4, 0x6a, 0xba, 0xe0,
	0x1f, 0x44, 0x63, 0x6f, 0x68, 0xcc, 0x55, 0xa1, 0xaa, 0x44, 0xbf, 0x01, 0x11, 0xbe, 0xba, 0x27,
	0x53, 0x1e, 0x14, 0xaa, 0x8a, 0xb4, 0xdf, 0xee, 0x5b, 0x88, 0x25, 0x0f, 0x0b, 0x55, 0x85, 0xda,
	0xef, 0xf2, 0x08, 0x3f, 0x9a, 0x84, 0xe7, 0x49, 0x4e, 0x98, 0x41, 0x78, 0x97, 0x61, 0xf5, 0xb8,
	0x89, 0xff, 0x10, 0x8b, 0xed, 0xed, 0x43, 0xbc, 0x27, 0xd1, 0x2b, 0x1d, 0x1a, 0x48, 0xaf, 0x34,
	0xdd, 0x5c, 0x42, 0x2b, 0x03, 0x6e, 0x21, 0xf2, 0x88, 0x69, 0xcd, 0xa6, 0x5e, 0xc3, 0x36, 0xbf,
	0x0e, 0x3e, 0xf2, 0xbd, 0x32, 0xb1, 0xcf, 0x6f, 0x5e, 0x01, 0x00, 0x00, 0xff, 0xff, 0x1e, 0xdd,
	0x3c, 0x5a, 0xd2, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// SendTestMsgClient is the client API for SendTestMsg service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SendTestMsgClient interface {
	SendT(ctx context.Context, in *TestReQ, opts ...grpc.CallOption) (SendTestMsg_SendTClient, error)
}

type sendTestMsgClient struct {
	cc *grpc.ClientConn
}

func NewSendTestMsgClient(cc *grpc.ClientConn) SendTestMsgClient {
	return &sendTestMsgClient{cc}
}

func (c *sendTestMsgClient) SendT(ctx context.Context, in *TestReQ, opts ...grpc.CallOption) (SendTestMsg_SendTClient, error) {
	stream, err := c.cc.NewStream(ctx, &_SendTestMsg_serviceDesc.Streams[0], "/pb.SendTestMsg/SendT", opts...)
	if err != nil {
		return nil, err
	}
	x := &sendTestMsgSendTClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type SendTestMsg_SendTClient interface {
	Recv() (*ResponsE, error)
	grpc.ClientStream
}

type sendTestMsgSendTClient struct {
	grpc.ClientStream
}

func (x *sendTestMsgSendTClient) Recv() (*ResponsE, error) {
	m := new(ResponsE)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// SendTestMsgServer is the server API for SendTestMsg service.
type SendTestMsgServer interface {
	SendT(*TestReQ, SendTestMsg_SendTServer) error
}

// UnimplementedSendTestMsgServer can be embedded to have forward compatible implementations.
type UnimplementedSendTestMsgServer struct {
}

func (*UnimplementedSendTestMsgServer) SendT(req *TestReQ, srv SendTestMsg_SendTServer) error {
	return status.Errorf(codes.Unimplemented, "method SendT not implemented")
}

func RegisterSendTestMsgServer(s *grpc.Server, srv SendTestMsgServer) {
	s.RegisterService(&_SendTestMsg_serviceDesc, srv)
}

func _SendTestMsg_SendT_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(TestReQ)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(SendTestMsgServer).SendT(m, &sendTestMsgSendTServer{stream})
}

type SendTestMsg_SendTServer interface {
	Send(*ResponsE) error
	grpc.ServerStream
}

type sendTestMsgSendTServer struct {
	grpc.ServerStream
}

func (x *sendTestMsgSendTServer) Send(m *ResponsE) error {
	return x.ServerStream.SendMsg(m)
}

var _SendTestMsg_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.SendTestMsg",
	HandlerType: (*SendTestMsgServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "SendT",
			Handler:       _SendTestMsg_SendT_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "pb/Message.proto",
}
